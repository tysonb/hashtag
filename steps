- - - Interacting with 3rd Party Services - - -

rvm use 1.9.3-p194@hashtag --create
rails new hashtag --skip-test-unit
cd hashtag
rvm use --ruby-version 1.9.3@hashtag --create
rm public/index.html

  git init
  git remote add origin git@github.com:tysonb/hashtag.git 
  git add .
  git commit -m 'initial commit'
  git push -u origin master

* * * RSPEC/CAPYBARA

vim Gemfile
  - add rspec-rails 2.11.0 to group development and test
  - add capybara 1.1.4 to group development and test
bundle
rails g rspec:install

  git add .
  git commit -m 'fire up rspec'
  git push

* * * HOMEPAGE

vim Gemfile
  - add high_voltage
bundle

mkdir spec/integration
vim spec/integration/view_homepage_spec.rb
  - add feature and scenario
rspec spec/integration/view_homepage_spec.rb

vim config/routes.rb
  - add root path to homepage using high_voltage
mkdir app/views/pages
touch app/views/pages/homepage.html.erb

rspec spec/integration/view_homepage_spec.rb
vim app/views/pages/homepage.html.erb
  - add data-role css element

* * * SEARCH

vim spec/integration/search_twitter_spec.rb (run spec)
add search form to homepage
add route 'searches#create'
vim app/controllers/searches_controller
  - add create action, then add redirect

vim config/routes
  - add show action to searches
mkdir app/views/searches
touch app/views/searches/show.html.erb`
add li to searches show view

vim Gemfile
  - add dotenv-rails(dev and test groups only) and twitter gems
vim .env
  - add twitter keys and tokens
mkdir app/services
vim app/service/twitter_client.rb

* * * TWEET CONTENT

vim spec/integration/search_twitter_spec.rb
  - add spec for tweet content
rake db:migrate
rake

* * * REFACTOR TWITTER SEARCH

mkdir spec/models
vim spec/models/searcher_spec.rb (run spec)
vim app/models/searcher.rb
refactor searches#show to use Searcher (run specs)

* * * FAKE TWITTER

mkdir spec/lib
vim spec/lib/fake_twitter_spec.rb
  - spec FakeTwitter.search
vim lib/fake_twitter.rb
vim config/application.rb
  - autoload lib dir:
  config.autoload_paths += %W(#{config.root}/lib)
vim spec/models/searcher_spec.rb
  - spec Searcher 'using a custom searcher'

- - - Mocks, Stubs and Spies - - -

vim Gemfile
  - add gem bourne 1.2.1 (in test group)
bundle
vim spec/spec_helper.rb
  - mock with mocha (uncomment config line)
vim spec/models/searcher_spec.rb
mkdir spec/support
vim spec/support/searcher.rb
